# Generated by Django 5.2.3 on 2025-06-22 12:53

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("community", "0002_alter_skillcircle_created_by_circle"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="circlemembership",
            options={"ordering": ["-is_favorite", "-joined_at"]},
        ),
        migrations.AlterModelOptions(
            name="circlepost",
            options={"ordering": ["-is_pinned", "-created_at"]},
        ),
        migrations.RemoveField(
            model_name="circle",
            name="banner_image",
        ),
        migrations.RemoveField(
            model_name="circle",
            name="category",
        ),
        migrations.RemoveField(
            model_name="circle",
            name="creator",
        ),
        migrations.RemoveField(
            model_name="circle",
            name="members",
        ),
        migrations.RemoveField(
            model_name="circle",
            name="privacy",
        ),
        migrations.AddField(
            model_name="circleevent",
            name="event_type",
            field=models.CharField(
                choices=[
                    ("workshop", "Workshop"),
                    ("meetup", "Meetup"),
                    ("webinar", "Webinar"),
                    ("challenge", "Challenge"),
                ],
                default="meetup",
                max_length=10,
            ),
        ),
        migrations.AddField(
            model_name="circleevent",
            name="is_recurring",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="circleevent",
            name="max_participants",
            field=models.PositiveIntegerField(default=0, help_text="0 means no limit"),
        ),
        migrations.AddField(
            model_name="circleevent",
            name="recurrence_pattern",
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name="circlemembership",
            name="is_favorite",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="circlemembership",
            name="last_seen",
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name="circlemembership",
            name="status",
            field=models.CharField(
                choices=[
                    ("pending", "Pending"),
                    ("approved", "Approved"),
                    ("rejected", "Rejected"),
                    ("banned", "Banned"),
                ],
                default="approved",
                max_length=10,
            ),
        ),
        migrations.AddField(
            model_name="circlepost",
            name="is_closed",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="circlepost",
            name="is_pinned",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="circlepost",
            name="post_type",
            field=models.CharField(
                choices=[
                    ("discussion", "Discussion"),
                    ("question", "Question"),
                    ("resource", "Resource"),
                    ("announcement", "Announcement"),
                ],
                default="discussion",
                max_length=12,
            ),
        ),
        migrations.AddField(
            model_name="skillcircle",
            name="is_active",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="skillcircle",
            name="member_limit",
            field=models.PositiveIntegerField(default=0, help_text="0 means no limit"),
        ),
        migrations.AddField(
            model_name="skillcircle",
            name="privacy",
            field=models.CharField(
                choices=[
                    ("public", "Public"),
                    ("private", "Private"),
                    ("hidden", "Hidden"),
                ],
                default="public",
                max_length=10,
            ),
        ),
        migrations.AddField(
            model_name="skillcircle",
            name="rules",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="skillcircle",
            name="tags",
            field=models.CharField(
                blank=True, help_text="Comma-separated tags", max_length=255
            ),
        ),
        migrations.CreateModel(
            name="CircleInvitation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                ("sent_at", models.DateTimeField(auto_now_add=True)),
                ("token", models.CharField(max_length=100, unique=True)),
                ("accepted", models.BooleanField(default=False)),
                (
                    "circle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="community.skillcircle",
                    ),
                ),
                (
                    "invited_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CircleNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("new_post", "New Post"),
                            ("event_reminder", "Event Reminder"),
                            ("membership_request", "Membership Request"),
                            ("membership_approved", "Membership Approved"),
                            ("mention", "Mention"),
                        ],
                        max_length=20,
                    ),
                ),
                ("message", models.CharField(max_length=255)),
                ("is_read", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "circle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="community.skillcircle",
                    ),
                ),
                (
                    "related_event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="community.circleevent",
                    ),
                ),
                (
                    "related_post",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="community.circlepost",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CircleResource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "resource_type",
                    models.CharField(
                        choices=[
                            ("document", "Document"),
                            ("link", "Link"),
                            ("video", "Video"),
                            ("book", "Book"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True, null=True, upload_to="circle_resources/"
                    ),
                ),
                ("url", models.URLField(blank=True, null=True)),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("is_approved", models.BooleanField(default=True)),
                (
                    "circle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="community.skillcircle",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PostComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent_comment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="community.postcomment",
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="community.circlepost",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="EventRegistration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("registered_at", models.DateTimeField(auto_now_add=True)),
                ("attended", models.BooleanField(default=False)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="community.circleevent",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("event", "user")},
            },
        ),
        migrations.CreateModel(
            name="PostLike",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="community.circlepost",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("post", "user")},
            },
        ),
    ]
